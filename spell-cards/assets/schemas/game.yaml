
---

version: '0.7'
metadata:
  name: Game
  authors:
  - name: 'Jeff Wise'
description:
  overview: |+
    Tome is an application for creating and playing roleplaying games. The heart of Tome 
    is a programmable roleplaying engine that allows users to program game mechanics, create 
    items, spells, etc... and design interactive, playable templates for their game. The Tome 
    app includes a customizable layout so the entire experience of a roleplaying game can be 
    built and customized within Tome. Furthermore, all of that work can easily be distributed 
    and shared with players.
root_type: game
types:
- type: product_type
  product_type:
    name: game  
    label: Game
    description: >
      The game.
    group: Game
    fields:
    - name: id
      type: 
        type: custom_type
        custom_type: game_id
      presence: required
      description: >
        The name of the game.
    - name: description
      type:
        type: custom_type
        custom_type: game_description
      presence: required
      description: >
        The name of the game.
    - name: rulebook
      type:
        type: custom_type
        custom_type: rulebook
      presence: optional
      description: >
        The name of the game.
    - name: engine
      type:
        type: custom_type
        custom_type: engine
      presence: required
      description: >
        The game engine.
- type: primitive_type
  primitive_type: 
    name: game_id
    label: Game Identifier
    description: >
      The unique game identifier.
    group: Game
    base_type: 
      type: prim_type
      prim_type: string
- type: product_type
  product_type:
    name: game_description
    label: Game Description
    description: >
      The game description.
    group: Game
    type: product
    fields:
    - name: summary
      type: 
        type: custom_type
        custom_type: game_summary
      presence: required
      description: >
        A brief description of the game.
    - name: game_name
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: >
        The game name.
    - name: authors
      type: 
        type: custom_coll_type
        custom_coll_type: author
      presence: required
      description: >
        The game's authors.
- type: primitive_type
  primitive_type:
    name: game_summary
    label: Game Summary
    description: >
      A brief description of a game.
    group: Game
    base_type:
      type: prim_type
      prim_type: string
- type: product_type
  product_type:
    name: author
    label: Author
    description: >
      A game author.
    group: Game
    fields:
    - name: name
      type: 
        type: custom_type
        custom_type: author_name
      presence: required
      description: >
        The author's name.
    - name: organization
      type:
        type: custom_type
        custom_type: author_organization
      presence: optional
      description: >
        The author's organization.
    - name: user_name
      type:
        type: custom_type
        custom_type: user_name
      presence: optional
      description: >
        The author's linked user name.
- type: primitive_type
  primitive_type:
    name: author_name
    label: Author Name
    description: >
      The author's full name.
    group: Author
    base_type:
      type: prim_type
      prim_type: string
- type: primitive_type
  primitive_type:
    name: author_organization
    label: Author Organization
    description: >
      The author's organization.
    group: Author
    base_type:
      type: prim_type
      prim_type: string
- type: primitive_type
  primitive_type:
    name: user_name
    label: User Name
    description: >
      A user name.
    group: User
    base_type:
      type: prim_type
      prim_type: string
- type: product_type
  product_type:
    name: rulebook
    label: Game Rulebook
    description: >
      The game rules.
    group: 'Rulebook'
    fields:
    - name: title
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: The title of the game rulebook.
    - name: abstract
      type:
        type: prim_type
        prim_type: string
      presence: optional
      description: A brief description of the game rules.
    - name: chapters
      type: 
        type: custom_coll_type
        custom_coll_type: rulebook_chapter
      presence: required
      description: The chapters
- type: product_type
  product_type:
    name: rulebook_chapter
    label: Game Rulebook Chapter
    description: Chapter
    group: 'Rulebook'
    fields:
    - name: id
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: The chapter id.
    - name: title
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: The chapter title.
    - name: sections
      type:
        type: custom_coll_type
        custom_coll_type: rulebook_section
      presence: required
      description: The chapters
- type: product_type
  product_type:
    name: rulebook_section
    label: Game Rulebook Chapter Section
    description: Chapter
    group: 'Rulebook'
    type: product
    fields:
    - name: id
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: The section id.
    - name: title
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: The section title.
    - name: body
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: The section body.
    - name: subsections
      type:
        type: custom_coll_type
        custom_coll_type: rulebook_subsection
      presence: required
      description: The sub sections.
- type: product_type
  product_type:
    name: rulebook_subsection
    label: Game Rulebook Chapter SubSection
    description: Chapter
    group: 'Rulebook'
    type: product
    fields:
    - name: id
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: The subsection id.
    - name: title
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: The subsection title.
    - name: body
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: The subsection body.
- type: product_type
  product_type:
    name: rulebook_reference
    label: Game Rulebook Reference
    description: Chapter
    group: 'Rulebook'
    type: product
    fields:
    - name: chapter_id
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: The chapter id.
    - name: section_id
      type:
        type: prim_type
        prim_type: string
      presence: optional
      description: The section id.
    - name: subsection_id
      type:
        type: prim_type
        prim_type: string
      presence: optional
      description: The subsection id.
- type: product_type
  product_type:
    name: engine  
    label: Engine
    description: >
      The engine contains all of the data definitions and programmable elements in Tome.
    group: Engine
    fields:
    - name: value_sets
      type: 
        type: custom_coll_type
        custom_coll_type: value_set
      presence: required
      description: >
        The value sets.
    - name: mechanics
      type:
        type: custom_coll_type
        custom_coll_type: mechanic
      presence: required
      description: >
        The mechanics define groupings of variables that may be active or inactive, depending on 
        customizable conditions. This allows the creation of different game mechanics, and permits 
        those mechanics to be made available only in certain situations.
    - name: mechanic_categories
      type:
        type: custom_coll_type
        custom_coll_type: mechanic_category
      presence: required
      description: The mechanic categories.
    - name: functions
      type:
        type: custom_coll_type
        custom_coll_type: function
      presence: required
      description: >
        Functions associate different sets of values. 
    - name: programs
      type:
        type: custom_coll_type
        custom_coll_type: program
      presence: required
      description: >
        Programs allow values on the sheet to be created from complex calculations.
    - name: summations
      type:
        type: custom_coll_type
        custom_coll_type: summation
      presence: required
      description: >
        The summations.
- type: primitive_type
  primitive_type:
    name: function_id
    label: Function Id
    description: >
      The function identifier.
    group: Author
    base_type:
      type: prim_type
      prim_type: string
- type: product_type
  product_type:
    name: function
    label: Function
    description: >
      The function maps one or more sets of values to another set of values. 
    group: Function
    fields:
    - name: function_id
      type: 
        type: custom_type
        custom_type: function_id
      presence: required
      description: >
        The function name. Must be unique and contain only letters, numbers and underscores. The 
        function name is used to uniquely identify the function when programming or customizing 
        a sheet. A typical user will not see this value.
    - name: label
      type: 
        type: prim_type
        prim_type: string
      presence: required
      description: >
        The function's label is the name or identifier of the function, intended for human 
        consumption. Make it pretty! It does not need to be unique and may contain any letters 
        or characters.
    - name: description
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: >
        A description of the function. The description should be concise and describe the purpose 
        of the function. It will probably be helpful to include as well situations where the 
        function will likely be used.
    - name: type_signature
      type:
        type: custom_type
        custom_type: function_type_signature
      presence: required
      description: >
        The function's type signature.
    - name: tuples
      type:
        type: custom_coll_type
        custom_coll_type: function_tuple
      presence: required
      description: >
        All of the mappings defined by the function.
- type: product_type
  product_type:
    name: function_type_signature
    label: Function Type Signature
    description: >
      A function type signature.
    group: Function
    fields:
    - name: parameter1_type
      type: 
        type: custom_type
        custom_type: engine_value_type
      presence: required
      description: >
        The first parameter type.
    - name: parameter2_type
      type:
        type: custom_type
        custom_type: engine_value_type
      presence: optional
      description: >
        The second parameter type.
    - name: parameter3_type
      type:
        type: custom_type
        custom_type: engine_value_type
      presence: optional
      description: >
        The third parameter type.
    - name: parameter4_type
      type:
        type: custom_type
        custom_type: engine_value_type
      presence: optional
      description: >
        The fourth parameter type.
    - name: parameter5_type
      type:
        type: custom_type
        custom_type: engine_value_type
      presence: optional
      description: >
        The fifth parameter type.
    - name: result_type
      type:
        type: custom_type
        custom_type: engine_value_type
      presence: required
      description: >
        The result type.
- type: product_type
  product_type:
    name: function_tuple
    label: Tuple
    description: >
      A function tuple is a mapping that belongs to a function. It defines which values are related.
    group: Function
    fields:
    - name: parameter1
      type: 
        type: custom_type
        custom_type: engine_value
      presence: required
      description: >
        The first parameter value.
    - name: parameter2
      type:
        type: custom_type
        custom_type: engine_value
      presence: optional
      description: >
        The second parameter value.
    - name: parameter3
      type:
        type: custom_type
        custom_type: engine_value
      presence: optional
      description: >
        The third parameter value.
    - name: parameter4
      type:
        type: custom_type
        custom_type: engine_value
      presence: optional
      description: >
        The fourth parameter value.
    - name: parameter5
      type:
        type: custom_type
        custom_type: engine_value
      presence: optional
      description: >
        The fifth parameter value.
    - name: result
      type:
        type: custom_type
        custom_type: engine_value
      presence: required
      description: >
        The result value
- type: primitive_type
  primitive_type:
    name: engine_value_type
    label: Engine Value type
    description: >
      The types of engine values
    group: Engine
    base_type:
      type: prim_type
      prim_type: string
    constraints:
    - engine_value_type_set
- type: sum_type
  sum_type:
    name: engine_value
    label: Dice Roll
    description: >
      A Dice Roll represents one or more dice of differents shapes plus a modifier.
    group: Engine
    cases:
    - type: engine_value_number 
      description: >
        A numeric value.
    - type: engine_value_text
      description: >
        A textual value.
    - type: engine_value_boolean
      description: >
        A boolean value.
    - type: dice_roll
      description: >
        A dice roll value.
- type: primitive_type
  primitive_type:
    name: engine_value_number
    label: Engine Value Number
    description: >
      Numeric engine value.
    group: Engine
    base_type:
      type: prim_type
      prim_type: number
- type: primitive_type
  primitive_type:
    name: engine_value_text
    label: Engine Value Text
    description: >
      Textual engine value.
    group: Engine
    base_type: 
      type: prim_type
      prim_type: string
- type: primitive_type
  primitive_type:
    name: engine_value_boolean
    label: Engine Value Boolean
    description: >
      Boolean engine value.
    group: Engine
    base_type:
      type: prim_type
      prim_type: boolean
- type: product_type
  product_type:
    name: dice_roll
    label: Dice Roll
    description: >
      A Dice Roll represents one or more dice of differents shapes plus a modifier.
    group: Dice Roll
    fields:
    - name: quantities
      type: 
        type: custom_coll_type
        custom_coll_type: dice_quantity
      presence: required
      description: >
        The dice quantities.
      constraints:
      - nonempty_list
    - name: modifiers
      type:
        type: custom_coll_type
        custom_coll_type: roll_modifier
      presence: optional
      description: >
        The dice modifiers.
- type: product_type
  product_type:
    name: dice_quantity
    label: Dice Quantity
    description: >
      A Dice Quantity is a die and a number of times that the die should be rolled. 
    group: Dice Roll
    fields:
    - name: sides
      type: 
        type: prim_type
        prim_type: number
      presence: required  
      description: >
        The number of sides of the die.
    - name: quantity
      type:
        type: prim_type
        prim_type: number
      presence: required  
      description: >
        The number of times to roll the die.
- type: product_type
  product_type:
    name: roll_modifier
    label: Roll Modifier
    description: >
      A Roll Modifier is a bonus that is applied to a Dice Roll. The bonus may be 
      associated with a name or description.
    group: Dice Roll
    type: product
    fields:
    - name: modifier
      type:
        type: prim_type
        prim_type: number
      presence: required
      description: >
        The integer value to add to a dice roll as a modifier.
    - name: name
      type:
        type: prim_type
        prim_type: string
      presence: optional
      description: >
        A label for the modifier.
- type: primitive_type
  primitive_type:
    name: procedure_id
    label: Procedure Id
    description: >
      The procedure identifier.
    group: Procedure
    base_type:
      type: prim_type
      prim_type: string
- type: product_type
  product_type:
    name: procedure
    label: Procedure
    description: A set of programs to execute.
    group: Procedure
    type: product
    fields:
    - name: procedure_id
      type: 
        type: custom_type
        custom_type: procedure_id
      presence: required
      description: The procedure id.
    - name: program_ids
      type:
        type: custom_coll_type
        custom_coll_type: program_id
      presence: required
      description: The programs to be executed.
- type: primitive_type
  primitive_type:
    name: program_id
    label: Program Id
    description: >
      The program identifier.
    group: Program
    base_type:
      type: prim_type
      prim_type: string
- type: product_type
  product_type:
    name: program
    label: Program
    description: >
      Programs define complex values that may be composed of other values. They are also reactive, 
      so if a program depends on a set of values, it updates when any one of those values changes. 
    group: Program
    fields:
    - name: program_id
      type: 
        type: custom_type
        custom_type: program_id
      presence: required
      description: >
        A name of the program. Must be unique and contain only letters, numbers, and underscores. 
        The name is used to uniquely identify the program when customizing some aspect of the 
        sheet.
    - name: label
      type: 
        type: prim_type
        prim_type: string
      presence: required
      description: >
        A program label is the program's name but formatted so it is easy to read. It does not need 
        to be unique and contain contain any letters or characters.
    - name: description
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: >
        A concise description of what the program does, why it exists, and in what situations it 
        could be used.
    - name: type_signature
      type:
        type: custom_type
        custom_type: program_type_signature
      presence: required
      description: >
        The types of input values that the program accepts.
    - name: statements
      type:
        type: custom_coll_type
        custom_coll_type: program_statement
      presence: optional
      description: >
        The program's statements.
    - name: result_binding_name
      type: 
        type: custom_type
        custom_type: statement_binding_name
      presence: required
      description: >
        The program statement that calculates the program result value.
- type: product_type
  product_type:
    name: program_type_signature
    label: Program Type Signature
    description: >
      A program type signature.
    group: Program
    fields:
    - name: parameter1_type
      type: 
        type: custom_type
        custom_type: engine_value_type
      presence: required
      description: >
        The first parameter type.
    - name: parameter2_type
      type:
        type: custom_type
        custom_type: engine_value_type
      presence: optional
      description: >
        The second parameter type.
    - name: parameter3_type
      type:
        type: custom_type
        custom_type: engine_value_type
      presence: optional
      description: >
        The third parameter type.
    - name: parameter4_type
      type:
        type: custom_type
        custom_type: engine_value_type
      presence: optional
      description: >
        The fourth parameter type.
    - name: parameter5_type
      type:
        type: custom_type
        custom_type: engine_value_type
      presence: optional
      description: >
        The fifth parameter type.
    - name: result_type
      type:
        type: custom_type
        custom_type: engine_value_type
      presence: required
      description: >
        The result type.
- type: product_type
  product_type:
    name: program_statement
    label: Statement
    description: >
      Programs are a collection of statements. Each statement defines one value. Those values can be 
      used in subsequent statements to calculate more values. The result of a program is just the 
      result of the final statement.
    group: Program
    fields:
    - name: binding_name
      type: 
        type: custom_type
        custom_type: statement_binding_name
      presence: required
      description: >
        The name of the variable defined by the statement. 
    - name: function_id
      type:
        type: custom_type
        custom_type: function_id
      presence: required
      description: >
        The function called by the statement.
    - name: parameter1
      type:
        type: custom_type
        custom_type: statement_parameter
      presence: required
      description: >
        The first function parameter value.
    - name: parameter2
      type:
        type: custom_type
        custom_type: statement_parameter
      presence: optional
      description: >
        The second function parameter value.
    - name: parameter3
      type:
        type: custom_type
        custom_type: statement_parameter
      presence: optional
      description: >
        The third function parameter value.
    - name: parameter4
      type:
        type: custom_type
        custom_type: statement_parameter
      presence: optional
      description: >
        The fourth function parameter value.
    - name: parameter5
      type:
        type: custom_type
        custom_type: statement_parameter
      presence: optional
      description: >
        The fifth function parameter value.
- type: product_type
  product_type:
    name: program_invocation
    label: Program Invocation
    description: >
      A program invocation describes a program that should be run. 
    group: Program
    fields:
    - name: program_id
      type: 
        type: custom_type
        custom_type: program_id
      presence: required
      description: >
        The unique name of the program to be invoked.
    - name: parameter1
      type:
        type: custom_type
        custom_type: data_reference
      presence: required
      description: >
        First parameter.
    - name: parameter2
      type:
        type: custom_type
        custom_type: data_reference
      presence: optional
      description: >
        Second parameter.
    - name: parameter3
      type:
        type: custom_type
        custom_type: data_reference
      presence: optional
      description: >
        Third parameter.
    - name: parameter4
      type:
        type: custom_type
        custom_type: data_reference
      presence: optional
      description: >
        Fourth parameter.
    - name: parameter5
      type:
        type: custom_type
        custom_type: data_reference
      presence: optional
      description: >
        Fifth parameter.
- type: primitive_type
  primitive_type:
    name: statement_binding_name
    label: Statement Binding Name
    description: >
      A statement binding name.
    group: Program
    base_type: 
      type: prim_type
      prim_type: string
- type: primitive_type
  primitive_type:
    name: program_parameter_index
    label: Program Parameter Index
    description: >
      A program parameter index.
    group: Program
    base_type:
      type: prim_type
      prim_type: number
- type: sum_type
  sum_type:
    name: statement_parameter
    label: Statement Parameter
    description: >
      A function parameter describes a piece of input to a function.
    group: Program
    cases:
    - type: statement_binding_name
      description: Statement binding.
    - type: program_parameter_index
      description: A program parameter.
    - type: data_reference
      description: Data reference.
- type: sum_type
  sum_type:
    name: data_reference
    label: Data Reference
    description: >
      A reference to data in the engine.
    group: Reference
    cases:
    - type: data_reference_boolean
      description: A boolean data reference.
    - type: data_reference_dice_roll
      description: A dice roll reference.
    - type: data_reference_number
      description: A number reference.
    - type: data_reference_text
      description: A text reference.
- type: sum_type
  sum_type:
    name: data_reference_boolean
    label: Boolean Data Reference
    description: >
      A reference to boolean data.
    group: Reference
    cases:
    - type: boolean_literal
      description: A literal boolean
    - type: variable_reference
      description: A boolean variable reference.
- type: sum_type
  sum_type:
    name: data_reference_dice_roll
    label: Dice Roll Data Reference
    description: >
      A reference to dice roll data.
    group: Reference
    cases:
    - type: dice_roll
      description: A literal dice roll
    - type: variable_reference
      description: A dice roll variable reference.
- type: sum_type
  sum_type:
    name: data_reference_number
    label: Number Data Reference
    description: >
      A reference to numeric data.
    group: Reference
    cases:
    - type: number_literal
      description: A literal number.
    - type: variable_reference
      description: A number variable reference.
    - type: value_reference
      description: A number value reference.
- type: sum_type
  sum_type:
    name: data_reference_text
    label: Text Data Reference
    description: >
      A reference to textual data.
    group: Reference
    cases:
    - type: text_literal
      description: A literal text.
    - type: variable_reference
      description: A text variable reference.
    - type: value_reference
      description: A text value reference.
- type: primitive_type
  primitive_type:
    name: mechanic_id
    label: Mechanic Identifier
    description: >
      The unique mechanic identifier.
    group: Game
    base_type:
      type: prim_type
      prim_type: string
- type: product_type
  product_type:
    name: mechanic
    label: Mechanic
    description: >
      The concept of a mechanic is related to the idea of game mechanics. In Tome a mechanic is 
      a collection of related variables. A mechanic is considered active or inactive. A mechanic's 
      state is determined by a collection of true or false variables. When all of those variables 
      are true, then the mechanic is active. If one of those varibles becomes false then the 
      mechanic is changed to an inactive state. When a mechanic is active, then its variables are 
      available in the programming environment (the engine.) And when the mechanic is inactive, 
      those variables are inaccessible.
    group: Mechanic
    fields:
    - name: id
      type: 
        type: custom_type
        custom_type: mechanic_id
      presence: required
      description: >
        The name of the Mechanic. The name is used to uniquely identify the mechanic when 
        programming or customizing the sheet. Therefore, the name must be unique and contain 
        only letters, numbers, and underscores.
    - name: label
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: >
        The mechanic label is the name of the Mechanic formatted nicely. It does not need to be 
        unique or contain any specific characters, but should be pleasant to read!
    - name: summary
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: >
        The mechanic summary is a very brief description of the mechanic. The summary is displayed 
        alongside the mechanic label in lists.
    - name: description
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: >
        The description should explain what the mechanic does and how, as well as detail situations 
        when it should be used. The description should relate the mechanic to the game rules that it 
        was created to emulate.
    - name: category_id
      type:
        type: custom_type
        custom_type: mechanic_category_id
      presence: required
      description: >
        The category of the mechanic should group the mechanic with other related mechanics.
    - name: requirements
      type:
        type: custom_coll_type
        custom_coll_type: namespaced_variable_id
      presence: required
      description: >
        A list of boolean variables that must be true for the mechanic to be active.
    - name: variables
      type:
        type: custom_coll_type
        custom_coll_type: variable
      presence: required
      description: >
        The variables that are active when the mechanic is active.
- type: primitive_type
  primitive_type:
    name: mechanic_category_id
    label: Mechanic Category Identifier
    description: >
      The unique mechanic identifier.
    group: Game
    base_type:
      type: prim_type
      prim_type: string
- type: product_type
  product_type:
    name: mechanic_category
    label: Mechanic Category
    description: >
      Mechanics are grouped into categories to make them easier to organize and deal with. A mechanic 
      may be created without a category, in which case it is sorted with other uncategorized 
      mechanics.
    group: Mechanic
    fields:
    - name: id
      type: 
        type: custom_type
        custom_type: mechanic_category_id
      presence: required
      description: >
        The name of the mechanic category is used to uniquely identify the category when customizing 
        the sheet. It must be unique and contain only letters, numbers, and underscores. What happens 
        when not unique?
    - name: label
      description: >
        The mechanic name in a form that is pleasant to read. It does not need to be unique and may 
        contain any characters. What about the length?
      type:
        type: prim_type
        prim_type: string
      presence: required
    - name: description
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: >
        A description of the category and the common traits that its mechanics share.
- type: sum_type
  sum_type:
    name: variable
    label: Variable
    description: >
      A variable is the basic element of programming in the Tome engine. A variable represents a 
      piece of data that may change over time. Variables may be declared in many places. While 
      many variables may be defined in a Tome sheet, they may not all be active. Only active 
      variables may be used by programs, widgets, or other Tome elements. There are a number of 
      different situations where variables may be activated.
    group: Variable
    cases: 
    - type: variable_boolean 
      description: >
        A variable with a true/false value.
    - type: variable_dice_roll 
      description: >
        A variable with a dice roll value.
    - type: variable_number 
      description: >
        A variable with a numerical value.
    - type: variable_text 
      description: >
        A variable with a text value.
- type: sum_type
  sum_type:
    name: variable_reference
    label: Variable Reference
    description: A reference to a variable.
    group: Variable
    cases: 
    - type: variable_id
      description: A variable id.
    - type: variable_tag 
      description: A variable tag
- type: product_type
  product_type:
    name: variable_boolean
    label: Boolean Variable
    description: >
      A boolean variable represents a piece of data that is either True of False. More generally, 
      it can represent any data with two unique states.
    group: Variable
    fields:
    - name: id
      type: 
        type: custom_type
        custom_type: variable_id
      presence: required
      description: >
        The name of the Boolean Variable. The name must be unique and may only contain letters, 
        numbers, and underscores. It is used to uniquely identify the variable when customizing 
        the sheet or programming.
    - name: label
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: >
        The Boolean Variable's name in a format that is pleasant to read. The label does not need 
        to be unique and may contain any characters.
    - name: description
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: >
        A description of what the variable represents.
    - name: value
      type:
        type: custom_type
        custom_type: variable_boolean_value
      presence: required
      description: >
        The value of the variable.
    - name: is_namespaced
      type:
        type: prim_type
        prim_type: boolean
      presence: optional
      default_value: 'false'
      description: >
        If true this variable may be assigned a namespace depending on its context.
    - name: tags
      type: 
        type: prim_coll_type
        prim_coll_type: string
      presence: optional
      description: >
        Tags that can be used to place the variable in a group.
- type: sum_type
  sum_type:
    name: variable_boolean_value
    label: Boolean Variable Value
    description: >
      The boolean variable value is the source of a Boolean Variable's value.
    group: Variable
    cases:
    - type: boolean_literal
      description: >
        A literal true/false value.
    - type: program_invocation
      description: >
        A true/false value created from a program.
- type: primitive_type
  primitive_type:
    name: boolean_literal
    label: Literal Boolean Value
    description: >
      Boolean literal value
    group: Variable
    base_type:
      type: prim_type
      prim_type: boolean
- type: product_type
  product_type:
    name: variable_dice_roll
    label: Dice Roll Variable
    description: >
      A Dice Variable represents a Dice Roll value.
    group: Variable
    fields:
    - name: name
      type: 
        type: prim_type
        prim_type: string
      presence: required
      description: >
        The name of the Dice Variable. The name must be unique and may only contain letters, 
        numbers, and underscores. It is used to uniquely identify the variable when customizing 
        the sheet or programming.
    - name: label
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: >
        The Dice Variable's name in a format that is pleasant to read. The label does not need 
        to be unique and may contain any characters.
    - name: description
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: >
        A description of what the variable represents.
    - name: value
      type: 
        type: custom_type
        custom_type: dice_roll
      presence: required
      description: >
        A the dice roll value.
    - name: is_namespaced
      type:
        type: prim_type
        prim_type: boolean
      presence: optional
      default_value: 'false'
      description: >
        If true this variable may be assigned a namespace depending on its context.
    - name: tags
      type:
        type: prim_coll_type
        prim_coll_type: string
      presence: optional
      description: >
        Tags that can be used to place the variable in a group.
- type: product_type
  product_type:
    name: variable_number
    label: Number Variable
    description: >
      A Number Variable holds numerical data. 
    group: Variable
    fields:
    - name: id
      type: 
        type: custom_type
        custom_type: variable_id
      presence: required
    - name: label
      type: 
        type: prim_type
        prim_type: string
      presence: required
    - name: description
      type:
        type: prim_type
        prim_type: string
      presence: required
    - name: value
      type: 
        type: custom_type
        custom_type: variable_number_value
      presence: required
    - name: is_namespaced
      type:
        type: prim_type
        prim_type: boolean
      presence: optional
      default_value: 'false'
      description: >
        If true this variable may be assigned a namespace depending on its context.
    - name: tags
      type: 
        type: custom_coll_type
        custom_coll_type: variable_tag
      presence: optional
      description: >
        Tags that can be used to place the variable in a group.
    - name: history
      type: 
        type: custom_type
        custom_type: variable_number_history
      presence: optional
      description: The value history.
- type: product_type
  product_type:
    name: variable_number_history
    label: Number Variable History
    description: Number Variable History
    group: Variable
    fields:
    - name: values
      type: 
        type: custom_coll_type
        custom_coll_type: variable_number_history_entry
      presence: required
      description: The values.
- type: product_type
  product_type:
    name: variable_number_history_entry
    label: Number Variable History Entry
    description: Number Variable History Entry
    group: Variable
    fields:
    - name: variable_number_value
      type: 
        type: custom_type
        custom_type: value
      presence: required
      description: The value
    - name: description
      type: 
        type: prim_type
        prim_type: string
      presence: optional
      description: A description of the value.
- type: sum_type
  sum_type:
    name: variable_number_value
    label: Number Variable Value
    description: >
      A number variable value is the source of a Number Variable's value.
    group: Variable
    cases:
    - type: number_literal
      description: A literal number.
    - type: unknown_number_literal
      description: Unknown number literal
    - type: variable_id
      description: >
        The value of another number variable.
    - type: program_invocation
      description: >
        The value of another number variable.
    - type: value_reference
      description: >
        A value from the Dictionary.
    - type: summation_id
      description: >
        The value of a summation.
- type: symbol_type
  symbol_type:
    name: unknown_number_literal
    label: Unknown Number Literal
    description: >
      Unknown number literal.
    group: 'Variable: Number'
    symbol: 'unknown_number_literal'
- type: primitive_type
  primitive_type:
    name: number_literal
    label: Number Literal
    description: >
      A literal number value.
    group: 'Variable: Number'
    base_type:
      type: prim_type
      prim_type: number
- type: primitive_type
  primitive_type:
    name: variable_id
    label: Variable Identifier
    description: >
      The unique identifier of a variable.
    group: Variable
    base_type:
      type: prim_type
      prim_type: string
- type: product_type
  product_type:
    name: namespaced_variable_id
    label: Namespaced Variable Id
    description: A variable id within a namespace.
    group: Variable
    fields:
    - name: name
      type: 
        type: custom_type
        custom_type: variable_id
      presence: required
      description: The variable id.
    - name: namespace
      type: 
        type: prim_type
        prim_type: string
      presence: optional
      description: The namespace.
- type: product_type
  product_type:
    name: variable_text
    label: Text Variable
    description: >
      A text variable contains textual data.
    group: Variable
    fields:
    - name: id
      type: 
        type: custom_type
        custom_type: variable_id
      presence: required
      description: >
        The name of the Text Variable. The name must be unique and may only contain letters, 
        numbers, and underscores. It is used to uniquely identify the variable when customizing 
        the sheet or programming.
    - name: label
      type: 
        type: prim_type
        prim_type: string
      presence: required
      description: >
        The Text Variable's name in a format that is pleasant to read. The label does not need 
        to be unique and may contain any characters.
    - name: description
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: >
        A description of what the variable represents.
    - name: value
      type: 
        type: custom_type
        custom_type: variable_text_value
      presence: required
      description: >
        The text value.
    - name: is_namespaced
      type:
        type: prim_type
        prim_type: boolean
      presence: optional
      default_value: 'false'
      description: >
        If true this variable may be assigned a namespace depending on its context.
    - name: tags
      type: 
        type: custom_coll_type
        custom_coll_type: variable_tag
      presence: optional
      description: >
        Tags that can be used to place the variable in a group.
- type: primitive_type
  primitive_type:
    name: variable_tag
    label: Variable Tag
    description: >
      The unique identifier of a variable.
    group: Variable
    base_type:
      type: prim_type
      prim_type: string
- type: sum_type
  sum_type:
    name: variable_text_value
    label: Text Variable Value
    description: >
      The source of a Text Variable's data.
    group: Variable
    cases:
    - type: text_literal
      description: A literal text value.
    - type: unknown_text_literal
      description: An unknown literal text value.
    - type: value_set_id
      description: value set id
    - type: value_reference
      description: >
        A text value from the Dictionary.
    - type: program_invocation
      description: >
        A program that returns a text value.
- type: primitive_type
  primitive_type:
    name: text_literal
    label: Text Literal
    description: >
      A literal text value.
    group: Variable
    base_type:
      type: prim_type
      prim_type: string
- type: symbol_type
  symbol_type:
    name: unknown_text_literal
    label: Unknown Text Literal
    description: >
      A unknown literal text value.
    group: Variable
    symbol: 'unknown_text_literal'
- type: primitive_type
  primitive_type:
    name: summation_id
    label: Summation Id
    description: >
      A summation identifier.
    group: Summation
    base_type:
      type: prim_type
      prim_type: string
- type: primitive_type
  primitive_type:
    name: summation_name
    label: Summation Name
    description: >
      A summation identifier.
    group: Summation
    base_type:
      type: prim_type
      prim_type: string
- type: product_type
  product_type:
    name: summation
    label: Summation
    description: >
      A summation is a numerical value that consists of the sum of other numerical values.
    group: Summation
    fields:
    - name: summation_id
      type: 
        type: custom_type
        custom_type: summation_id
      presence: required
      description: The summation id.
    - name: summation_name
      type: 
        type: custom_type
        custom_type: summation_name
      presence: required
      description: The summation name.
    - name: terms
      type:
        type: custom_coll_type
        custom_coll_type: summation_term
      presence: required
      description: >
        The terms of the summation.
- type: sum_type
  sum_type:
    name: summation_term
    label: Summation Term
    description: >
      A summation term is a value that is part of a summation.
    group: Summation
    cases:
    - type: summation_term_number
      description: >
        A literal number.
    - type: summation_term_dice_roll
      description: >
        A dice roll.
    - type: summation_term_conditional
      description: >
        The value depends on if a boolean variable is true or false.
- type: product_type
  product_type:
    name: summation_term_conditional
    label: Conditional Term
    description: >
      A conditional summation term is a term that can take on two different values, depending on the 
      truthfulness of a boolean variable. 
    group: Summation
    fields:
    - name: conditional_term_value
      type: 
        type: custom_type
        custom_type: variable_boolean
      presence: required
      description: >
        A boolean variable that is used to determine which branch to follow.
    - name: true_term_value
      type:
        type: custom_type
        custom_type: variable_number
      presence: required
      description: >
        The number variable to be the result when the conditional term is true.
    - name: false_term_value
      type:
        type: custom_type
        custom_type: variable_number
      presence: required
      description: >
        The number variable to be the result when the conditional term is false.
- type: primitive_type
  primitive_type:
    name: summation_term_name
    label: Summation Term Name
    description: >
      The unique game identifier.
    group: Summation
    base_type:
      type: prim_type
      prim_type: string
- type: product_type
  product_type:
    name: summation_term_number
    label: Number Term
    description: >
      An integer term is a number that is part of a summation.
    group: Summation
    fields:
    - name: term_name
      type: 
        type: custom_type
        custom_type: summation_term_name
      presence: optional
      description: Term Name
    - name: value
      type:
        type: custom_type
        custom_type: data_reference_number
      presence: required
      description: >
        The number variable that is the term value.
- type: product_type
  product_type:
    name: summation_term_dice_roll
    label: Dice Roll Term
    description: >
      An dice roll term represents a number that is part of a summation. Depending on how the 
      summation is used, the dice roll may be rolled to calculate an exact value for the 
      summation or the dice roll may be preserved, in which case the summation becomes a dice 
      roll with any non-dice roll values being modifiers to the roll.
    group: Summation
    fields:
    - name: term_name
      type: 
        type: custom_type
        custom_type: summation_term_name
      presence: optional
      description: Term Name
    - name: value
      type:
        type: custom_type
        custom_type: data_reference_dice_roll
      presence: required
      description: >
        The dice roll value that is the term value.
- type: product_type
  product_type:
    name: summation_term_conditional
    label: Conditional Term
    description: Conditional Term
    group: Summation
    fields:
    - name: term_name
      type: 
        type: custom_type
        custom_type: summation_term_name
      presence: optional
      description: Term Name
    - name: condition
      type:
        type: custom_type
        custom_type: data_reference_boolean
      presence: required
      description: >
        The dice roll value that is the term value.
    - name: when_true
      type: 
        type: custom_type
        custom_type: data_reference_number
      presence: required
      description: >
        The dice roll value that is the term value.
    - name: when_false
      type:
        type: custom_type
        custom_type: data_reference_number
      presence: required
      description: >
        The dice roll value that is the term value.
- type: product_type
  product_type:
    name: value_reference
    label: Value Reference
    description: >
      A value reference is a reference to a value or value set defined in the Dictionary.
    group: Value
    fields:
    - name: value_set_id
      type: 
        type: custom_type
        custom_type: value_set_id
      presence: required
      description: >
        The name of the value set.
    - name: value_id
      type:
        type: custom_type
        custom_type: value_id
      presence: optional
      description: >
        The name of the value.
- type: primitive_type
  primitive_type:
    name: value_set_id
    label: Value Set Id
    description: >
      The unique game identifier.
    group: ValueSet
    base_type:
      type: prim_type
      prim_type: string
- type: primitive_type
  primitive_type:
    name: value_id
    label: Value Id
    description: >
      The unique value identifier.
    group: Value
    base_type:
      type: prim_type
      prim_type: string
- type: primitive_type
  primitive_type:
    name: value_set_value_type
    label: Value Set Value Type
    description: >
      The types of values in a value set.
    group: ValueSet
    base_type:
      type: prim_type
      prim_type: string
    constraints:
    - value_set_value_type_set
- type: sum_type
  sum_type:
    name: value_set
    label: Value Set
    description: >
      A value set is a set of custom values. It may simply be a collection of values or it could 
      be a collection of value sets.
    group: Value
    cases:
    - type: value_set_base
      description: >
        A base value set, composed of just values.
    - type: value_set_compound
      description: >
        A compound value set, composed of values from multiple value sets.
- type: product_type
  product_type:
    name: value_set_base
    label: Base Value Set
    description: >
      A base value set is a collection of custom defined values in Tome. 
    group: Value
    fields:
    - name: value_set_id
      type: 
        type: custom_type
        custom_type: value_set_id
      presence: required
      description: >
        The name is used to uniquely identify the Base Value Set when customizing or programming. 
        It must therefore be unique and may contain only letters, numbers, and underscores.
    - name: label
      type: 
        type: prim_type
        prim_type: string
      presence: optional
      description: >
        The name in a format that is pleasant to read. Does not need to be unique and may contain 
        any characters. Should be plural.
    - name: label_singular
      type:
        type: custom_type
        custom_type: value_set_id
      presence: optional
      description: >
        The name in a format that is pleasant to read, but in a singular form.
    - name: description
      type:
        type: custom_type
        custom_type: value_set_id
      presence: optional
      description: >
        A concise description of the value set's purpose and of what it contains.
    - name: value_type
      type: 
        type: custom_type
        custom_type: value_set_value_type
      presence: optional
      description: >
        The type of values in the value set.
    - name: values
      type: 
        type: custom_coll_type
        custom_coll_type: value
      presence: required
      description: >
        The colletion of values in the set.
- type: product_type
  product_type:
    name: value_set_compound
    label: Compound Value Set
    description: >
      A compound value set is a collection of other value sets.
    group: Value
    fields:
    - name: value_set_id
      type: 
        type: custom_type
        custom_type: value_set_id
      presence: required
      description: >
        The name is used to uniquely identify the Base Value Set when customizing or programming. 
        It must therefore be unique and may contain only letters, numbers, and underscores.
    - name: label
      type: 
        type: prim_type
        prim_type: string
      presence: optional
      description: >
        The name in a format that is pleasant to read. Does not need to be unique and may contain 
        any characters. Should be plural.
    - name: label_singular
      type:
        type: prim_type
        prim_type: string
      presence: optional
      description: >
        The name in a format that is pleasant to read, but in a singular form.
    - name: description
      type:
        type: prim_type
        prim_type: string
      presence: optional
      description: >
        A concise description of the value set's purpose and of what it contains.
    - name: value_type
      type: 
        type: custom_type
        custom_type: value_set_value_type
      presence: optional
      description: >
        The type of values in the value set.
    - name: value_set_ids
      type: 
        type: custom_coll_type
        custom_coll_type: value_set_id
      presence: required
      description: >
        The names of the value sets in the compound value set.
- type: sum_type
  sum_type:
    name: value
    label: Value
    description: >
      A value is a fundamental part of the programming engine. It permits the creation of custom 
      data.
    group: Value
    cases:
    - type: value_text
      description: >
        A text value.
    - type: value_number
      description: >
        A numerical value.
- type: product_type
  product_type:
    name: value_text
    label: Text Value
    description: >
      A textual value.
    group: Value
    fields:
    - name: value_id
      type: 
        type: custom_type
        custom_type: value_id
      presence: required
      description: >
        A unique identifier of the value.
    - name: description
      type: 
        type: prim_type
        prim_type: string
      presence: optional
      description: >
        A concise description of what the value represents.
    - name: value
      type:
        type: prim_type
        prim_type: string
      presence: required
      description: >
        The text value.
    - name: rulebook_reference
      type: 
        type: custom_type
        custom_type: rulebook_reference
      presence: optional
      description: >
        A reference to a description of the value in the rulebook.
    - name: variables
      type: 
        type: custom_coll_type
        custom_coll_type: variable
      presence: optional
      description: >
        Variables that will be active when this value is used.
- type: product_type
  product_type:
    name: value_number
    label: Number Value
    description: >
      A numerical value.
    group: Value
    fields:
    - name: value_id
      type: 
        type: custom_type
        custom_type: value_id
      presence: required
      description: >
        A unique identifier of the value.
    - name: description
      type: 
        type: prim_type
        prim_type: string
      presence: optional
      description: >
        A concise description of what the value represents.
    - name: value
      type: 
        type: prim_type
        prim_type: number
      presence: required
      description: >
        The number value.
    - name: rulebook_reference
      type: 
        type: custom_type
        custom_type: rulebook_reference
      presence: optional
      description: >
        A reference to a description of the value in the rulebook.
    - name: variables
      type: 
        type: custom_coll_type
        custom_coll_type: variable
      presence: optional
      description: >
        Variables that will be active when this value is used.
constraints:
- type: constraint_string_one_of
  constraint_string_one_of:
    name: function_parameter_type
    description: Function parameter
    set:
    - parameter
    - variable
    - literal_number
    - literal_string
- type: constraint_string_one_of
  constraint_string_one_of:
    name: value_set_value_type_set
    description: Value Set Value Type
    set:
    - number
    - text
    - any
- type: constraint_string_one_of
  constraint_string_one_of:
    name: engine_value_type_set
    description: Engine Value Type
    set:
    - number
    - text
    - boolean
    - dice_roll
    - list_text
